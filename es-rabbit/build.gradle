/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'I311352' at '11/23/16 1:11 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
//mainClassName = 'event.RabbitMQApp'
mainClassName = 'exportimport.MainCtrl'
applicationDefaultJvmArgs = ["-Dconfig=./config.properties"]

//jar {
//    baseName = 'elastic-rabbit-job'
//    version =  '1.0.0'
//}

sourceCompatibility = 1.8
targetCompatibility = 1.8


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://nexus.smec/nexus/content/groups/allrepository'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'joda-time:joda-time:2.2'
    compile 'com.rabbitmq:amqp-client:3.6.5'
    compile 'commons-io:commons-io:2.4'
//    compile 'com.sap.sme.anw:vault-common-java:1.0.0'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.5.5'
    compile 'com.google.code.gson:gson:2.7'
    compile 'commons-io:commons-io:2.4'
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '5.1.1'
    compile group: 'org.elasticsearch.client', name: 'rest', version: '5.1.1'
    compile group: 'org.elasticsearch.client', name: 'sniffer', version: '5.1.1'

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator', version: '1.4.3.RELEASE'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
//    testCompile 'junit:junit:4.12'
//    testCompile('org.springframework.boot:spring-boot-starter-test')
}